// Code generated by SQLBoiler 4.6.0 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package models

import "testing"

// This test suite runs each operation test in parallel.
// Example, if your database has 3 tables, the suite will run:
// table1, table2 and table3 Delete in parallel
// table1, table2 and table3 Insert in parallel, and so forth.
// It does NOT run each operation group in parallel.
// Separating the tests thusly grants avoidance of Postgres deadlocks.
func TestParent(t *testing.T) {
	t.Run("AdditionalInvoices", testAdditionalInvoices)
	t.Run("Attachments", testAttachments)
	t.Run("Audits", testAudits)
	t.Run("BusinessPartnerCompanies", testBusinessPartnerCompanies)
	t.Run("Companies", testCompanies)
	t.Run("CompaniesLogoes", testCompaniesLogoes)
	t.Run("Conditions", testConditions)
	t.Run("ContractedCompanies", testContractedCompanies)
	t.Run("CustomerParts", testCustomerParts)
	t.Run("Cycles", testCycles)
	t.Run("Documents", testDocuments)
	t.Run("DocumentsTypes", testDocumentsTypes)
	t.Run("FailedJobs", testFailedJobs)
	t.Run("InvoiceForms", testInvoiceForms)
	t.Run("Maintenances", testMaintenances)
	t.Run("Migrations", testMigrations)
	t.Run("OrderDates", testOrderDates)
	t.Run("OrderItems", testOrderItems)
	t.Run("Orders", testOrders)
	t.Run("PaymentDates", testPaymentDates)
	t.Run("PaymentWays", testPaymentWays)
	t.Run("PostagesLists", testPostagesLists)
	t.Run("ProductTypes", testProductTypes)
	t.Run("ProductsLists", testProductsLists)
	t.Run("Progresses", testProgresses)
	t.Run("PurchasedPostages", testPurchasedPostages)
	t.Run("PurchasedProducts", testPurchasedProducts)
	t.Run("SeeParts", testSeeParts)
	t.Run("SellParts", testSellParts)
	t.Run("SendWays", testSendWays)
	t.Run("SiteRepresentatives", testSiteRepresentatives)
	t.Run("Sites", testSites)
	t.Run("Users", testUsers)
}

func TestDelete(t *testing.T) {
	t.Run("AdditionalInvoices", testAdditionalInvoicesDelete)
	t.Run("Attachments", testAttachmentsDelete)
	t.Run("Audits", testAuditsDelete)
	t.Run("BusinessPartnerCompanies", testBusinessPartnerCompaniesDelete)
	t.Run("Companies", testCompaniesDelete)
	t.Run("CompaniesLogoes", testCompaniesLogoesDelete)
	t.Run("Conditions", testConditionsDelete)
	t.Run("ContractedCompanies", testContractedCompaniesDelete)
	t.Run("CustomerParts", testCustomerPartsDelete)
	t.Run("Cycles", testCyclesDelete)
	t.Run("Documents", testDocumentsDelete)
	t.Run("DocumentsTypes", testDocumentsTypesDelete)
	t.Run("FailedJobs", testFailedJobsDelete)
	t.Run("InvoiceForms", testInvoiceFormsDelete)
	t.Run("Maintenances", testMaintenancesDelete)
	t.Run("Migrations", testMigrationsDelete)
	t.Run("OrderDates", testOrderDatesDelete)
	t.Run("OrderItems", testOrderItemsDelete)
	t.Run("Orders", testOrdersDelete)
	t.Run("PaymentDates", testPaymentDatesDelete)
	t.Run("PaymentWays", testPaymentWaysDelete)
	t.Run("PostagesLists", testPostagesListsDelete)
	t.Run("ProductTypes", testProductTypesDelete)
	t.Run("ProductsLists", testProductsListsDelete)
	t.Run("Progresses", testProgressesDelete)
	t.Run("PurchasedPostages", testPurchasedPostagesDelete)
	t.Run("PurchasedProducts", testPurchasedProductsDelete)
	t.Run("SeeParts", testSeePartsDelete)
	t.Run("SellParts", testSellPartsDelete)
	t.Run("SendWays", testSendWaysDelete)
	t.Run("SiteRepresentatives", testSiteRepresentativesDelete)
	t.Run("Sites", testSitesDelete)
	t.Run("Users", testUsersDelete)
}

func TestQueryDeleteAll(t *testing.T) {
	t.Run("AdditionalInvoices", testAdditionalInvoicesQueryDeleteAll)
	t.Run("Attachments", testAttachmentsQueryDeleteAll)
	t.Run("Audits", testAuditsQueryDeleteAll)
	t.Run("BusinessPartnerCompanies", testBusinessPartnerCompaniesQueryDeleteAll)
	t.Run("Companies", testCompaniesQueryDeleteAll)
	t.Run("CompaniesLogoes", testCompaniesLogoesQueryDeleteAll)
	t.Run("Conditions", testConditionsQueryDeleteAll)
	t.Run("ContractedCompanies", testContractedCompaniesQueryDeleteAll)
	t.Run("CustomerParts", testCustomerPartsQueryDeleteAll)
	t.Run("Cycles", testCyclesQueryDeleteAll)
	t.Run("Documents", testDocumentsQueryDeleteAll)
	t.Run("DocumentsTypes", testDocumentsTypesQueryDeleteAll)
	t.Run("FailedJobs", testFailedJobsQueryDeleteAll)
	t.Run("InvoiceForms", testInvoiceFormsQueryDeleteAll)
	t.Run("Maintenances", testMaintenancesQueryDeleteAll)
	t.Run("Migrations", testMigrationsQueryDeleteAll)
	t.Run("OrderDates", testOrderDatesQueryDeleteAll)
	t.Run("OrderItems", testOrderItemsQueryDeleteAll)
	t.Run("Orders", testOrdersQueryDeleteAll)
	t.Run("PaymentDates", testPaymentDatesQueryDeleteAll)
	t.Run("PaymentWays", testPaymentWaysQueryDeleteAll)
	t.Run("PostagesLists", testPostagesListsQueryDeleteAll)
	t.Run("ProductTypes", testProductTypesQueryDeleteAll)
	t.Run("ProductsLists", testProductsListsQueryDeleteAll)
	t.Run("Progresses", testProgressesQueryDeleteAll)
	t.Run("PurchasedPostages", testPurchasedPostagesQueryDeleteAll)
	t.Run("PurchasedProducts", testPurchasedProductsQueryDeleteAll)
	t.Run("SeeParts", testSeePartsQueryDeleteAll)
	t.Run("SellParts", testSellPartsQueryDeleteAll)
	t.Run("SendWays", testSendWaysQueryDeleteAll)
	t.Run("SiteRepresentatives", testSiteRepresentativesQueryDeleteAll)
	t.Run("Sites", testSitesQueryDeleteAll)
	t.Run("Users", testUsersQueryDeleteAll)
}

func TestSliceDeleteAll(t *testing.T) {
	t.Run("AdditionalInvoices", testAdditionalInvoicesSliceDeleteAll)
	t.Run("Attachments", testAttachmentsSliceDeleteAll)
	t.Run("Audits", testAuditsSliceDeleteAll)
	t.Run("BusinessPartnerCompanies", testBusinessPartnerCompaniesSliceDeleteAll)
	t.Run("Companies", testCompaniesSliceDeleteAll)
	t.Run("CompaniesLogoes", testCompaniesLogoesSliceDeleteAll)
	t.Run("Conditions", testConditionsSliceDeleteAll)
	t.Run("ContractedCompanies", testContractedCompaniesSliceDeleteAll)
	t.Run("CustomerParts", testCustomerPartsSliceDeleteAll)
	t.Run("Cycles", testCyclesSliceDeleteAll)
	t.Run("Documents", testDocumentsSliceDeleteAll)
	t.Run("DocumentsTypes", testDocumentsTypesSliceDeleteAll)
	t.Run("FailedJobs", testFailedJobsSliceDeleteAll)
	t.Run("InvoiceForms", testInvoiceFormsSliceDeleteAll)
	t.Run("Maintenances", testMaintenancesSliceDeleteAll)
	t.Run("Migrations", testMigrationsSliceDeleteAll)
	t.Run("OrderDates", testOrderDatesSliceDeleteAll)
	t.Run("OrderItems", testOrderItemsSliceDeleteAll)
	t.Run("Orders", testOrdersSliceDeleteAll)
	t.Run("PaymentDates", testPaymentDatesSliceDeleteAll)
	t.Run("PaymentWays", testPaymentWaysSliceDeleteAll)
	t.Run("PostagesLists", testPostagesListsSliceDeleteAll)
	t.Run("ProductTypes", testProductTypesSliceDeleteAll)
	t.Run("ProductsLists", testProductsListsSliceDeleteAll)
	t.Run("Progresses", testProgressesSliceDeleteAll)
	t.Run("PurchasedPostages", testPurchasedPostagesSliceDeleteAll)
	t.Run("PurchasedProducts", testPurchasedProductsSliceDeleteAll)
	t.Run("SeeParts", testSeePartsSliceDeleteAll)
	t.Run("SellParts", testSellPartsSliceDeleteAll)
	t.Run("SendWays", testSendWaysSliceDeleteAll)
	t.Run("SiteRepresentatives", testSiteRepresentativesSliceDeleteAll)
	t.Run("Sites", testSitesSliceDeleteAll)
	t.Run("Users", testUsersSliceDeleteAll)
}

func TestExists(t *testing.T) {
	t.Run("AdditionalInvoices", testAdditionalInvoicesExists)
	t.Run("Attachments", testAttachmentsExists)
	t.Run("Audits", testAuditsExists)
	t.Run("BusinessPartnerCompanies", testBusinessPartnerCompaniesExists)
	t.Run("Companies", testCompaniesExists)
	t.Run("CompaniesLogoes", testCompaniesLogoesExists)
	t.Run("Conditions", testConditionsExists)
	t.Run("ContractedCompanies", testContractedCompaniesExists)
	t.Run("CustomerParts", testCustomerPartsExists)
	t.Run("Cycles", testCyclesExists)
	t.Run("Documents", testDocumentsExists)
	t.Run("DocumentsTypes", testDocumentsTypesExists)
	t.Run("FailedJobs", testFailedJobsExists)
	t.Run("InvoiceForms", testInvoiceFormsExists)
	t.Run("Maintenances", testMaintenancesExists)
	t.Run("Migrations", testMigrationsExists)
	t.Run("OrderDates", testOrderDatesExists)
	t.Run("OrderItems", testOrderItemsExists)
	t.Run("Orders", testOrdersExists)
	t.Run("PaymentDates", testPaymentDatesExists)
	t.Run("PaymentWays", testPaymentWaysExists)
	t.Run("PostagesLists", testPostagesListsExists)
	t.Run("ProductTypes", testProductTypesExists)
	t.Run("ProductsLists", testProductsListsExists)
	t.Run("Progresses", testProgressesExists)
	t.Run("PurchasedPostages", testPurchasedPostagesExists)
	t.Run("PurchasedProducts", testPurchasedProductsExists)
	t.Run("SeeParts", testSeePartsExists)
	t.Run("SellParts", testSellPartsExists)
	t.Run("SendWays", testSendWaysExists)
	t.Run("SiteRepresentatives", testSiteRepresentativesExists)
	t.Run("Sites", testSitesExists)
	t.Run("Users", testUsersExists)
}

func TestFind(t *testing.T) {
	t.Run("AdditionalInvoices", testAdditionalInvoicesFind)
	t.Run("Attachments", testAttachmentsFind)
	t.Run("Audits", testAuditsFind)
	t.Run("BusinessPartnerCompanies", testBusinessPartnerCompaniesFind)
	t.Run("Companies", testCompaniesFind)
	t.Run("CompaniesLogoes", testCompaniesLogoesFind)
	t.Run("Conditions", testConditionsFind)
	t.Run("ContractedCompanies", testContractedCompaniesFind)
	t.Run("CustomerParts", testCustomerPartsFind)
	t.Run("Cycles", testCyclesFind)
	t.Run("Documents", testDocumentsFind)
	t.Run("DocumentsTypes", testDocumentsTypesFind)
	t.Run("FailedJobs", testFailedJobsFind)
	t.Run("InvoiceForms", testInvoiceFormsFind)
	t.Run("Maintenances", testMaintenancesFind)
	t.Run("Migrations", testMigrationsFind)
	t.Run("OrderDates", testOrderDatesFind)
	t.Run("OrderItems", testOrderItemsFind)
	t.Run("Orders", testOrdersFind)
	t.Run("PaymentDates", testPaymentDatesFind)
	t.Run("PaymentWays", testPaymentWaysFind)
	t.Run("PostagesLists", testPostagesListsFind)
	t.Run("ProductTypes", testProductTypesFind)
	t.Run("ProductsLists", testProductsListsFind)
	t.Run("Progresses", testProgressesFind)
	t.Run("PurchasedPostages", testPurchasedPostagesFind)
	t.Run("PurchasedProducts", testPurchasedProductsFind)
	t.Run("SeeParts", testSeePartsFind)
	t.Run("SellParts", testSellPartsFind)
	t.Run("SendWays", testSendWaysFind)
	t.Run("SiteRepresentatives", testSiteRepresentativesFind)
	t.Run("Sites", testSitesFind)
	t.Run("Users", testUsersFind)
}

func TestBind(t *testing.T) {
	t.Run("AdditionalInvoices", testAdditionalInvoicesBind)
	t.Run("Attachments", testAttachmentsBind)
	t.Run("Audits", testAuditsBind)
	t.Run("BusinessPartnerCompanies", testBusinessPartnerCompaniesBind)
	t.Run("Companies", testCompaniesBind)
	t.Run("CompaniesLogoes", testCompaniesLogoesBind)
	t.Run("Conditions", testConditionsBind)
	t.Run("ContractedCompanies", testContractedCompaniesBind)
	t.Run("CustomerParts", testCustomerPartsBind)
	t.Run("Cycles", testCyclesBind)
	t.Run("Documents", testDocumentsBind)
	t.Run("DocumentsTypes", testDocumentsTypesBind)
	t.Run("FailedJobs", testFailedJobsBind)
	t.Run("InvoiceForms", testInvoiceFormsBind)
	t.Run("Maintenances", testMaintenancesBind)
	t.Run("Migrations", testMigrationsBind)
	t.Run("OrderDates", testOrderDatesBind)
	t.Run("OrderItems", testOrderItemsBind)
	t.Run("Orders", testOrdersBind)
	t.Run("PaymentDates", testPaymentDatesBind)
	t.Run("PaymentWays", testPaymentWaysBind)
	t.Run("PostagesLists", testPostagesListsBind)
	t.Run("ProductTypes", testProductTypesBind)
	t.Run("ProductsLists", testProductsListsBind)
	t.Run("Progresses", testProgressesBind)
	t.Run("PurchasedPostages", testPurchasedPostagesBind)
	t.Run("PurchasedProducts", testPurchasedProductsBind)
	t.Run("SeeParts", testSeePartsBind)
	t.Run("SellParts", testSellPartsBind)
	t.Run("SendWays", testSendWaysBind)
	t.Run("SiteRepresentatives", testSiteRepresentativesBind)
	t.Run("Sites", testSitesBind)
	t.Run("Users", testUsersBind)
}

func TestOne(t *testing.T) {
	t.Run("AdditionalInvoices", testAdditionalInvoicesOne)
	t.Run("Attachments", testAttachmentsOne)
	t.Run("Audits", testAuditsOne)
	t.Run("BusinessPartnerCompanies", testBusinessPartnerCompaniesOne)
	t.Run("Companies", testCompaniesOne)
	t.Run("CompaniesLogoes", testCompaniesLogoesOne)
	t.Run("Conditions", testConditionsOne)
	t.Run("ContractedCompanies", testContractedCompaniesOne)
	t.Run("CustomerParts", testCustomerPartsOne)
	t.Run("Cycles", testCyclesOne)
	t.Run("Documents", testDocumentsOne)
	t.Run("DocumentsTypes", testDocumentsTypesOne)
	t.Run("FailedJobs", testFailedJobsOne)
	t.Run("InvoiceForms", testInvoiceFormsOne)
	t.Run("Maintenances", testMaintenancesOne)
	t.Run("Migrations", testMigrationsOne)
	t.Run("OrderDates", testOrderDatesOne)
	t.Run("OrderItems", testOrderItemsOne)
	t.Run("Orders", testOrdersOne)
	t.Run("PaymentDates", testPaymentDatesOne)
	t.Run("PaymentWays", testPaymentWaysOne)
	t.Run("PostagesLists", testPostagesListsOne)
	t.Run("ProductTypes", testProductTypesOne)
	t.Run("ProductsLists", testProductsListsOne)
	t.Run("Progresses", testProgressesOne)
	t.Run("PurchasedPostages", testPurchasedPostagesOne)
	t.Run("PurchasedProducts", testPurchasedProductsOne)
	t.Run("SeeParts", testSeePartsOne)
	t.Run("SellParts", testSellPartsOne)
	t.Run("SendWays", testSendWaysOne)
	t.Run("SiteRepresentatives", testSiteRepresentativesOne)
	t.Run("Sites", testSitesOne)
	t.Run("Users", testUsersOne)
}

func TestAll(t *testing.T) {
	t.Run("AdditionalInvoices", testAdditionalInvoicesAll)
	t.Run("Attachments", testAttachmentsAll)
	t.Run("Audits", testAuditsAll)
	t.Run("BusinessPartnerCompanies", testBusinessPartnerCompaniesAll)
	t.Run("Companies", testCompaniesAll)
	t.Run("CompaniesLogoes", testCompaniesLogoesAll)
	t.Run("Conditions", testConditionsAll)
	t.Run("ContractedCompanies", testContractedCompaniesAll)
	t.Run("CustomerParts", testCustomerPartsAll)
	t.Run("Cycles", testCyclesAll)
	t.Run("Documents", testDocumentsAll)
	t.Run("DocumentsTypes", testDocumentsTypesAll)
	t.Run("FailedJobs", testFailedJobsAll)
	t.Run("InvoiceForms", testInvoiceFormsAll)
	t.Run("Maintenances", testMaintenancesAll)
	t.Run("Migrations", testMigrationsAll)
	t.Run("OrderDates", testOrderDatesAll)
	t.Run("OrderItems", testOrderItemsAll)
	t.Run("Orders", testOrdersAll)
	t.Run("PaymentDates", testPaymentDatesAll)
	t.Run("PaymentWays", testPaymentWaysAll)
	t.Run("PostagesLists", testPostagesListsAll)
	t.Run("ProductTypes", testProductTypesAll)
	t.Run("ProductsLists", testProductsListsAll)
	t.Run("Progresses", testProgressesAll)
	t.Run("PurchasedPostages", testPurchasedPostagesAll)
	t.Run("PurchasedProducts", testPurchasedProductsAll)
	t.Run("SeeParts", testSeePartsAll)
	t.Run("SellParts", testSellPartsAll)
	t.Run("SendWays", testSendWaysAll)
	t.Run("SiteRepresentatives", testSiteRepresentativesAll)
	t.Run("Sites", testSitesAll)
	t.Run("Users", testUsersAll)
}

func TestCount(t *testing.T) {
	t.Run("AdditionalInvoices", testAdditionalInvoicesCount)
	t.Run("Attachments", testAttachmentsCount)
	t.Run("Audits", testAuditsCount)
	t.Run("BusinessPartnerCompanies", testBusinessPartnerCompaniesCount)
	t.Run("Companies", testCompaniesCount)
	t.Run("CompaniesLogoes", testCompaniesLogoesCount)
	t.Run("Conditions", testConditionsCount)
	t.Run("ContractedCompanies", testContractedCompaniesCount)
	t.Run("CustomerParts", testCustomerPartsCount)
	t.Run("Cycles", testCyclesCount)
	t.Run("Documents", testDocumentsCount)
	t.Run("DocumentsTypes", testDocumentsTypesCount)
	t.Run("FailedJobs", testFailedJobsCount)
	t.Run("InvoiceForms", testInvoiceFormsCount)
	t.Run("Maintenances", testMaintenancesCount)
	t.Run("Migrations", testMigrationsCount)
	t.Run("OrderDates", testOrderDatesCount)
	t.Run("OrderItems", testOrderItemsCount)
	t.Run("Orders", testOrdersCount)
	t.Run("PaymentDates", testPaymentDatesCount)
	t.Run("PaymentWays", testPaymentWaysCount)
	t.Run("PostagesLists", testPostagesListsCount)
	t.Run("ProductTypes", testProductTypesCount)
	t.Run("ProductsLists", testProductsListsCount)
	t.Run("Progresses", testProgressesCount)
	t.Run("PurchasedPostages", testPurchasedPostagesCount)
	t.Run("PurchasedProducts", testPurchasedProductsCount)
	t.Run("SeeParts", testSeePartsCount)
	t.Run("SellParts", testSellPartsCount)
	t.Run("SendWays", testSendWaysCount)
	t.Run("SiteRepresentatives", testSiteRepresentativesCount)
	t.Run("Sites", testSitesCount)
	t.Run("Users", testUsersCount)
}

func TestHooks(t *testing.T) {
	t.Run("AdditionalInvoices", testAdditionalInvoicesHooks)
	t.Run("Attachments", testAttachmentsHooks)
	t.Run("Audits", testAuditsHooks)
	t.Run("BusinessPartnerCompanies", testBusinessPartnerCompaniesHooks)
	t.Run("Companies", testCompaniesHooks)
	t.Run("CompaniesLogoes", testCompaniesLogoesHooks)
	t.Run("Conditions", testConditionsHooks)
	t.Run("ContractedCompanies", testContractedCompaniesHooks)
	t.Run("CustomerParts", testCustomerPartsHooks)
	t.Run("Cycles", testCyclesHooks)
	t.Run("Documents", testDocumentsHooks)
	t.Run("DocumentsTypes", testDocumentsTypesHooks)
	t.Run("FailedJobs", testFailedJobsHooks)
	t.Run("InvoiceForms", testInvoiceFormsHooks)
	t.Run("Maintenances", testMaintenancesHooks)
	t.Run("Migrations", testMigrationsHooks)
	t.Run("OrderDates", testOrderDatesHooks)
	t.Run("OrderItems", testOrderItemsHooks)
	t.Run("Orders", testOrdersHooks)
	t.Run("PaymentDates", testPaymentDatesHooks)
	t.Run("PaymentWays", testPaymentWaysHooks)
	t.Run("PostagesLists", testPostagesListsHooks)
	t.Run("ProductTypes", testProductTypesHooks)
	t.Run("ProductsLists", testProductsListsHooks)
	t.Run("Progresses", testProgressesHooks)
	t.Run("PurchasedPostages", testPurchasedPostagesHooks)
	t.Run("PurchasedProducts", testPurchasedProductsHooks)
	t.Run("SeeParts", testSeePartsHooks)
	t.Run("SellParts", testSellPartsHooks)
	t.Run("SendWays", testSendWaysHooks)
	t.Run("SiteRepresentatives", testSiteRepresentativesHooks)
	t.Run("Sites", testSitesHooks)
	t.Run("Users", testUsersHooks)
}

func TestInsert(t *testing.T) {
	t.Run("AdditionalInvoices", testAdditionalInvoicesInsert)
	t.Run("AdditionalInvoices", testAdditionalInvoicesInsertWhitelist)
	t.Run("Attachments", testAttachmentsInsert)
	t.Run("Attachments", testAttachmentsInsertWhitelist)
	t.Run("Audits", testAuditsInsert)
	t.Run("Audits", testAuditsInsertWhitelist)
	t.Run("BusinessPartnerCompanies", testBusinessPartnerCompaniesInsert)
	t.Run("BusinessPartnerCompanies", testBusinessPartnerCompaniesInsertWhitelist)
	t.Run("Companies", testCompaniesInsert)
	t.Run("Companies", testCompaniesInsertWhitelist)
	t.Run("CompaniesLogoes", testCompaniesLogoesInsert)
	t.Run("CompaniesLogoes", testCompaniesLogoesInsertWhitelist)
	t.Run("Conditions", testConditionsInsert)
	t.Run("Conditions", testConditionsInsertWhitelist)
	t.Run("ContractedCompanies", testContractedCompaniesInsert)
	t.Run("ContractedCompanies", testContractedCompaniesInsertWhitelist)
	t.Run("CustomerParts", testCustomerPartsInsert)
	t.Run("CustomerParts", testCustomerPartsInsertWhitelist)
	t.Run("Cycles", testCyclesInsert)
	t.Run("Cycles", testCyclesInsertWhitelist)
	t.Run("Documents", testDocumentsInsert)
	t.Run("Documents", testDocumentsInsertWhitelist)
	t.Run("DocumentsTypes", testDocumentsTypesInsert)
	t.Run("DocumentsTypes", testDocumentsTypesInsertWhitelist)
	t.Run("FailedJobs", testFailedJobsInsert)
	t.Run("FailedJobs", testFailedJobsInsertWhitelist)
	t.Run("InvoiceForms", testInvoiceFormsInsert)
	t.Run("InvoiceForms", testInvoiceFormsInsertWhitelist)
	t.Run("Maintenances", testMaintenancesInsert)
	t.Run("Maintenances", testMaintenancesInsertWhitelist)
	t.Run("Migrations", testMigrationsInsert)
	t.Run("Migrations", testMigrationsInsertWhitelist)
	t.Run("OrderDates", testOrderDatesInsert)
	t.Run("OrderDates", testOrderDatesInsertWhitelist)
	t.Run("OrderItems", testOrderItemsInsert)
	t.Run("OrderItems", testOrderItemsInsertWhitelist)
	t.Run("Orders", testOrdersInsert)
	t.Run("Orders", testOrdersInsertWhitelist)
	t.Run("PaymentDates", testPaymentDatesInsert)
	t.Run("PaymentDates", testPaymentDatesInsertWhitelist)
	t.Run("PaymentWays", testPaymentWaysInsert)
	t.Run("PaymentWays", testPaymentWaysInsertWhitelist)
	t.Run("PostagesLists", testPostagesListsInsert)
	t.Run("PostagesLists", testPostagesListsInsertWhitelist)
	t.Run("ProductTypes", testProductTypesInsert)
	t.Run("ProductTypes", testProductTypesInsertWhitelist)
	t.Run("ProductsLists", testProductsListsInsert)
	t.Run("ProductsLists", testProductsListsInsertWhitelist)
	t.Run("Progresses", testProgressesInsert)
	t.Run("Progresses", testProgressesInsertWhitelist)
	t.Run("PurchasedPostages", testPurchasedPostagesInsert)
	t.Run("PurchasedPostages", testPurchasedPostagesInsertWhitelist)
	t.Run("PurchasedProducts", testPurchasedProductsInsert)
	t.Run("PurchasedProducts", testPurchasedProductsInsertWhitelist)
	t.Run("SeeParts", testSeePartsInsert)
	t.Run("SeeParts", testSeePartsInsertWhitelist)
	t.Run("SellParts", testSellPartsInsert)
	t.Run("SellParts", testSellPartsInsertWhitelist)
	t.Run("SendWays", testSendWaysInsert)
	t.Run("SendWays", testSendWaysInsertWhitelist)
	t.Run("SiteRepresentatives", testSiteRepresentativesInsert)
	t.Run("SiteRepresentatives", testSiteRepresentativesInsertWhitelist)
	t.Run("Sites", testSitesInsert)
	t.Run("Sites", testSitesInsertWhitelist)
	t.Run("Users", testUsersInsert)
	t.Run("Users", testUsersInsertWhitelist)
}

// TestToOne tests cannot be run in parallel
// or deadlocks can occur.
func TestToOne(t *testing.T) {
	t.Run("CompanyToCycleUsingCycle", testCompanyToOneCycleUsingCycle)
	t.Run("CompanyToInvoiceFormUsingInvoiceForm", testCompanyToOneInvoiceFormUsingInvoiceForm)
	t.Run("CompanyToPaymentDateUsingPaymentDate", testCompanyToOnePaymentDateUsingPaymentDate)
	t.Run("CompanyToPaymentWayUsingPaymentWay", testCompanyToOnePaymentWayUsingPaymentWay)
	t.Run("CompanyToSendWayUsingSendWay", testCompanyToOneSendWayUsingSendWay)
	t.Run("ContractedCompanyToDocumentUsingDocument", testContractedCompanyToOneDocumentUsingDocument)
	t.Run("PurchasedPostageToDocumentUsingDocument", testPurchasedPostageToOneDocumentUsingDocument)
}

// TestOneToOne tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOne(t *testing.T) {}

// TestToMany tests cannot be run in parallel
// or deadlocks can occur.
func TestToMany(t *testing.T) {
	t.Run("CycleToCompanies", testCycleToManyCompanies)
	t.Run("DocumentToContractedCompanies", testDocumentToManyContractedCompanies)
	t.Run("DocumentToPurchasedPostages", testDocumentToManyPurchasedPostages)
	t.Run("InvoiceFormToCompanies", testInvoiceFormToManyCompanies)
	t.Run("PaymentDateToCompanies", testPaymentDateToManyCompanies)
	t.Run("PaymentWayToCompanies", testPaymentWayToManyCompanies)
	t.Run("SendWayToCompanies", testSendWayToManyCompanies)
}

// TestToOneSet tests cannot be run in parallel
// or deadlocks can occur.
func TestToOneSet(t *testing.T) {
	t.Run("CompanyToCycleUsingCompanies", testCompanyToOneSetOpCycleUsingCycle)
	t.Run("CompanyToInvoiceFormUsingCompanies", testCompanyToOneSetOpInvoiceFormUsingInvoiceForm)
	t.Run("CompanyToPaymentDateUsingCompanies", testCompanyToOneSetOpPaymentDateUsingPaymentDate)
	t.Run("CompanyToPaymentWayUsingCompanies", testCompanyToOneSetOpPaymentWayUsingPaymentWay)
	t.Run("CompanyToSendWayUsingCompanies", testCompanyToOneSetOpSendWayUsingSendWay)
	t.Run("ContractedCompanyToDocumentUsingContractedCompanies", testContractedCompanyToOneSetOpDocumentUsingDocument)
	t.Run("PurchasedPostageToDocumentUsingPurchasedPostages", testPurchasedPostageToOneSetOpDocumentUsingDocument)
}

// TestToOneRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestToOneRemove(t *testing.T) {
	t.Run("CompanyToCycleUsingCompanies", testCompanyToOneRemoveOpCycleUsingCycle)
	t.Run("CompanyToInvoiceFormUsingCompanies", testCompanyToOneRemoveOpInvoiceFormUsingInvoiceForm)
	t.Run("CompanyToPaymentDateUsingCompanies", testCompanyToOneRemoveOpPaymentDateUsingPaymentDate)
	t.Run("CompanyToPaymentWayUsingCompanies", testCompanyToOneRemoveOpPaymentWayUsingPaymentWay)
	t.Run("CompanyToSendWayUsingCompanies", testCompanyToOneRemoveOpSendWayUsingSendWay)
}

// TestOneToOneSet tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOneSet(t *testing.T) {}

// TestOneToOneRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOneRemove(t *testing.T) {}

// TestToManyAdd tests cannot be run in parallel
// or deadlocks can occur.
func TestToManyAdd(t *testing.T) {
	t.Run("CycleToCompanies", testCycleToManyAddOpCompanies)
	t.Run("DocumentToContractedCompanies", testDocumentToManyAddOpContractedCompanies)
	t.Run("DocumentToPurchasedPostages", testDocumentToManyAddOpPurchasedPostages)
	t.Run("InvoiceFormToCompanies", testInvoiceFormToManyAddOpCompanies)
	t.Run("PaymentDateToCompanies", testPaymentDateToManyAddOpCompanies)
	t.Run("PaymentWayToCompanies", testPaymentWayToManyAddOpCompanies)
	t.Run("SendWayToCompanies", testSendWayToManyAddOpCompanies)
}

// TestToManySet tests cannot be run in parallel
// or deadlocks can occur.
func TestToManySet(t *testing.T) {
	t.Run("CycleToCompanies", testCycleToManySetOpCompanies)
	t.Run("InvoiceFormToCompanies", testInvoiceFormToManySetOpCompanies)
	t.Run("PaymentDateToCompanies", testPaymentDateToManySetOpCompanies)
	t.Run("PaymentWayToCompanies", testPaymentWayToManySetOpCompanies)
	t.Run("SendWayToCompanies", testSendWayToManySetOpCompanies)
}

// TestToManyRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestToManyRemove(t *testing.T) {
	t.Run("CycleToCompanies", testCycleToManyRemoveOpCompanies)
	t.Run("InvoiceFormToCompanies", testInvoiceFormToManyRemoveOpCompanies)
	t.Run("PaymentDateToCompanies", testPaymentDateToManyRemoveOpCompanies)
	t.Run("PaymentWayToCompanies", testPaymentWayToManyRemoveOpCompanies)
	t.Run("SendWayToCompanies", testSendWayToManyRemoveOpCompanies)
}

func TestReload(t *testing.T) {
	t.Run("AdditionalInvoices", testAdditionalInvoicesReload)
	t.Run("Attachments", testAttachmentsReload)
	t.Run("Audits", testAuditsReload)
	t.Run("BusinessPartnerCompanies", testBusinessPartnerCompaniesReload)
	t.Run("Companies", testCompaniesReload)
	t.Run("CompaniesLogoes", testCompaniesLogoesReload)
	t.Run("Conditions", testConditionsReload)
	t.Run("ContractedCompanies", testContractedCompaniesReload)
	t.Run("CustomerParts", testCustomerPartsReload)
	t.Run("Cycles", testCyclesReload)
	t.Run("Documents", testDocumentsReload)
	t.Run("DocumentsTypes", testDocumentsTypesReload)
	t.Run("FailedJobs", testFailedJobsReload)
	t.Run("InvoiceForms", testInvoiceFormsReload)
	t.Run("Maintenances", testMaintenancesReload)
	t.Run("Migrations", testMigrationsReload)
	t.Run("OrderDates", testOrderDatesReload)
	t.Run("OrderItems", testOrderItemsReload)
	t.Run("Orders", testOrdersReload)
	t.Run("PaymentDates", testPaymentDatesReload)
	t.Run("PaymentWays", testPaymentWaysReload)
	t.Run("PostagesLists", testPostagesListsReload)
	t.Run("ProductTypes", testProductTypesReload)
	t.Run("ProductsLists", testProductsListsReload)
	t.Run("Progresses", testProgressesReload)
	t.Run("PurchasedPostages", testPurchasedPostagesReload)
	t.Run("PurchasedProducts", testPurchasedProductsReload)
	t.Run("SeeParts", testSeePartsReload)
	t.Run("SellParts", testSellPartsReload)
	t.Run("SendWays", testSendWaysReload)
	t.Run("SiteRepresentatives", testSiteRepresentativesReload)
	t.Run("Sites", testSitesReload)
	t.Run("Users", testUsersReload)
}

func TestReloadAll(t *testing.T) {
	t.Run("AdditionalInvoices", testAdditionalInvoicesReloadAll)
	t.Run("Attachments", testAttachmentsReloadAll)
	t.Run("Audits", testAuditsReloadAll)
	t.Run("BusinessPartnerCompanies", testBusinessPartnerCompaniesReloadAll)
	t.Run("Companies", testCompaniesReloadAll)
	t.Run("CompaniesLogoes", testCompaniesLogoesReloadAll)
	t.Run("Conditions", testConditionsReloadAll)
	t.Run("ContractedCompanies", testContractedCompaniesReloadAll)
	t.Run("CustomerParts", testCustomerPartsReloadAll)
	t.Run("Cycles", testCyclesReloadAll)
	t.Run("Documents", testDocumentsReloadAll)
	t.Run("DocumentsTypes", testDocumentsTypesReloadAll)
	t.Run("FailedJobs", testFailedJobsReloadAll)
	t.Run("InvoiceForms", testInvoiceFormsReloadAll)
	t.Run("Maintenances", testMaintenancesReloadAll)
	t.Run("Migrations", testMigrationsReloadAll)
	t.Run("OrderDates", testOrderDatesReloadAll)
	t.Run("OrderItems", testOrderItemsReloadAll)
	t.Run("Orders", testOrdersReloadAll)
	t.Run("PaymentDates", testPaymentDatesReloadAll)
	t.Run("PaymentWays", testPaymentWaysReloadAll)
	t.Run("PostagesLists", testPostagesListsReloadAll)
	t.Run("ProductTypes", testProductTypesReloadAll)
	t.Run("ProductsLists", testProductsListsReloadAll)
	t.Run("Progresses", testProgressesReloadAll)
	t.Run("PurchasedPostages", testPurchasedPostagesReloadAll)
	t.Run("PurchasedProducts", testPurchasedProductsReloadAll)
	t.Run("SeeParts", testSeePartsReloadAll)
	t.Run("SellParts", testSellPartsReloadAll)
	t.Run("SendWays", testSendWaysReloadAll)
	t.Run("SiteRepresentatives", testSiteRepresentativesReloadAll)
	t.Run("Sites", testSitesReloadAll)
	t.Run("Users", testUsersReloadAll)
}

func TestSelect(t *testing.T) {
	t.Run("AdditionalInvoices", testAdditionalInvoicesSelect)
	t.Run("Attachments", testAttachmentsSelect)
	t.Run("Audits", testAuditsSelect)
	t.Run("BusinessPartnerCompanies", testBusinessPartnerCompaniesSelect)
	t.Run("Companies", testCompaniesSelect)
	t.Run("CompaniesLogoes", testCompaniesLogoesSelect)
	t.Run("Conditions", testConditionsSelect)
	t.Run("ContractedCompanies", testContractedCompaniesSelect)
	t.Run("CustomerParts", testCustomerPartsSelect)
	t.Run("Cycles", testCyclesSelect)
	t.Run("Documents", testDocumentsSelect)
	t.Run("DocumentsTypes", testDocumentsTypesSelect)
	t.Run("FailedJobs", testFailedJobsSelect)
	t.Run("InvoiceForms", testInvoiceFormsSelect)
	t.Run("Maintenances", testMaintenancesSelect)
	t.Run("Migrations", testMigrationsSelect)
	t.Run("OrderDates", testOrderDatesSelect)
	t.Run("OrderItems", testOrderItemsSelect)
	t.Run("Orders", testOrdersSelect)
	t.Run("PaymentDates", testPaymentDatesSelect)
	t.Run("PaymentWays", testPaymentWaysSelect)
	t.Run("PostagesLists", testPostagesListsSelect)
	t.Run("ProductTypes", testProductTypesSelect)
	t.Run("ProductsLists", testProductsListsSelect)
	t.Run("Progresses", testProgressesSelect)
	t.Run("PurchasedPostages", testPurchasedPostagesSelect)
	t.Run("PurchasedProducts", testPurchasedProductsSelect)
	t.Run("SeeParts", testSeePartsSelect)
	t.Run("SellParts", testSellPartsSelect)
	t.Run("SendWays", testSendWaysSelect)
	t.Run("SiteRepresentatives", testSiteRepresentativesSelect)
	t.Run("Sites", testSitesSelect)
	t.Run("Users", testUsersSelect)
}

func TestUpdate(t *testing.T) {
	t.Run("AdditionalInvoices", testAdditionalInvoicesUpdate)
	t.Run("Attachments", testAttachmentsUpdate)
	t.Run("Audits", testAuditsUpdate)
	t.Run("BusinessPartnerCompanies", testBusinessPartnerCompaniesUpdate)
	t.Run("Companies", testCompaniesUpdate)
	t.Run("CompaniesLogoes", testCompaniesLogoesUpdate)
	t.Run("Conditions", testConditionsUpdate)
	t.Run("ContractedCompanies", testContractedCompaniesUpdate)
	t.Run("CustomerParts", testCustomerPartsUpdate)
	t.Run("Cycles", testCyclesUpdate)
	t.Run("Documents", testDocumentsUpdate)
	t.Run("DocumentsTypes", testDocumentsTypesUpdate)
	t.Run("FailedJobs", testFailedJobsUpdate)
	t.Run("InvoiceForms", testInvoiceFormsUpdate)
	t.Run("Maintenances", testMaintenancesUpdate)
	t.Run("Migrations", testMigrationsUpdate)
	t.Run("OrderDates", testOrderDatesUpdate)
	t.Run("OrderItems", testOrderItemsUpdate)
	t.Run("Orders", testOrdersUpdate)
	t.Run("PaymentDates", testPaymentDatesUpdate)
	t.Run("PaymentWays", testPaymentWaysUpdate)
	t.Run("PostagesLists", testPostagesListsUpdate)
	t.Run("ProductTypes", testProductTypesUpdate)
	t.Run("ProductsLists", testProductsListsUpdate)
	t.Run("Progresses", testProgressesUpdate)
	t.Run("PurchasedPostages", testPurchasedPostagesUpdate)
	t.Run("PurchasedProducts", testPurchasedProductsUpdate)
	t.Run("SeeParts", testSeePartsUpdate)
	t.Run("SellParts", testSellPartsUpdate)
	t.Run("SendWays", testSendWaysUpdate)
	t.Run("SiteRepresentatives", testSiteRepresentativesUpdate)
	t.Run("Sites", testSitesUpdate)
	t.Run("Users", testUsersUpdate)
}

func TestSliceUpdateAll(t *testing.T) {
	t.Run("AdditionalInvoices", testAdditionalInvoicesSliceUpdateAll)
	t.Run("Attachments", testAttachmentsSliceUpdateAll)
	t.Run("Audits", testAuditsSliceUpdateAll)
	t.Run("BusinessPartnerCompanies", testBusinessPartnerCompaniesSliceUpdateAll)
	t.Run("Companies", testCompaniesSliceUpdateAll)
	t.Run("CompaniesLogoes", testCompaniesLogoesSliceUpdateAll)
	t.Run("Conditions", testConditionsSliceUpdateAll)
	t.Run("ContractedCompanies", testContractedCompaniesSliceUpdateAll)
	t.Run("CustomerParts", testCustomerPartsSliceUpdateAll)
	t.Run("Cycles", testCyclesSliceUpdateAll)
	t.Run("Documents", testDocumentsSliceUpdateAll)
	t.Run("DocumentsTypes", testDocumentsTypesSliceUpdateAll)
	t.Run("FailedJobs", testFailedJobsSliceUpdateAll)
	t.Run("InvoiceForms", testInvoiceFormsSliceUpdateAll)
	t.Run("Maintenances", testMaintenancesSliceUpdateAll)
	t.Run("Migrations", testMigrationsSliceUpdateAll)
	t.Run("OrderDates", testOrderDatesSliceUpdateAll)
	t.Run("OrderItems", testOrderItemsSliceUpdateAll)
	t.Run("Orders", testOrdersSliceUpdateAll)
	t.Run("PaymentDates", testPaymentDatesSliceUpdateAll)
	t.Run("PaymentWays", testPaymentWaysSliceUpdateAll)
	t.Run("PostagesLists", testPostagesListsSliceUpdateAll)
	t.Run("ProductTypes", testProductTypesSliceUpdateAll)
	t.Run("ProductsLists", testProductsListsSliceUpdateAll)
	t.Run("Progresses", testProgressesSliceUpdateAll)
	t.Run("PurchasedPostages", testPurchasedPostagesSliceUpdateAll)
	t.Run("PurchasedProducts", testPurchasedProductsSliceUpdateAll)
	t.Run("SeeParts", testSeePartsSliceUpdateAll)
	t.Run("SellParts", testSellPartsSliceUpdateAll)
	t.Run("SendWays", testSendWaysSliceUpdateAll)
	t.Run("SiteRepresentatives", testSiteRepresentativesSliceUpdateAll)
	t.Run("Sites", testSitesSliceUpdateAll)
	t.Run("Users", testUsersSliceUpdateAll)
}
